# Access via "http://localhost:8080"
#   (or "http://$(docker-machine ip):8080" if using docker-machine)

version: '3.4'

x-logging:
  &default-logging
  options:
    max-size: '10m'
    max-file: '5'
  driver: json-file

services:
  drupal:
    image: naturalis/php-drupal:${PHP_DRUPAL_TAG:-0.0.2}
    restart: unless-stopped
    depends_on:
        - db
    env_file:
      - .env
    ports:
      - ${WEB_EXTERNAL_PORT:-8080}:80
    networks:
      - default
      - web
    logging: *default-logging
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:-true}
      - traefik.http.routers.drupal.entrypoints=websecure
      - traefik.http.routers.drupal.tls.certresolver=route53
      - traefik.http.routers.drupal.tls=true
      - traefik.http.routers.drupal.rule=${DRUPAL_SITE_URL:-Host(`drupal-test.naturalis.nl`)}
    volumes:
      - ${BASE_PATH:-/data}/www/drupal:/var/www/html
      - ${BASE_PATH:-/opt}/project:/opt/project

  db:
    image: "mysql:5.7"
    restart: unless-stopped
    environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-drupaltest}
        MYSQL_DATABASE: ${MYSQL_DATABASE:-drupaldb}
        MYSQL_USER: ${MYSQL_USER:-drupaluser}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD:-test123}
    networks:
        - default
    logging: *default-logging
    ports:
        - "${MYSQL_EXTERNAL_PORT:-3306}:3306"
    volumes:
        - ${BASE_PATH:-/data}/database/mysqlconf:/etc/mysql/conf.d
        - ${BASE_PATH:-/data}/database/initdb:/docker-entrypoint-initdb.d
        - ${BASE_PATH:-/data}/database/db:/var/lib/mysql
        - ${BASE_PATH:-/data}/database/mysqllog:/var/log/mysql
    healthcheck:
        test: mysql --user=root --password=${MYSQL_ROOT_PASSWORD} -e 'connect ${MYSQL_DATABASE:-drupaldb}'

  traefik:
    image: traefik:2.1.4
    container_name: "traefik"
    restart: unless-stopped
    environment:
      - "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
      - "AWS_HOSTED_ZONE_ID=${AWS_HOSTED_ZONE_ID}"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.route53.acme.dnschallenge=true"
      - "--certificatesresolvers.route53.acme.dnschallenge.provider=route53"
      - "--certificatesresolvers.route53.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.route53.acme.storage=/letsencrypt/route53.json"
      - "--global.sendAnonymousUsage=false"
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8081:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

# run docker network create web before
networks:
  web:
    external: true
